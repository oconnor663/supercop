gammas512_1024 = [2285, 2571, 2970, 1812, 1493, 1422, 287, 202, 3158, 622, 1577, 182, 962, 2127, 1855, 1468, 573, 2004, 264, 383, 2500, 1458, 1727, 3199, 2648, 1017, 732, 608, 1787, 411, 3124, 1758, 1223, 652, 2777, 1015, 2036, 1491, 3047, 1785, 516, 3321, 3009, 2663, 1711, 2167, 126, 1469, 2476, 3239, 3058, 830, 107, 1908, 3082, 2378, 2931, 961, 1821, 2604, 448, 2264, 677, 2054, 2226, 430, 555, 843, 2078, 871, 1550, 105, 422, 587, 177, 3094, 3038, 2869, 1574, 1653, 3083, 778, 1159, 3182, 2552, 1483, 2727, 1119, 1739, 644, 2457, 349, 418, 329, 3173, 3254, 817, 1097, 603, 610, 1322, 2044, 1864, 384, 2114, 3193, 1218, 1994, 2455, 220, 2142, 1670, 2144, 1799, 2051, 794, 1819, 2475, 2459, 478, 3221, 3021, 996, 991, 958, 1869, 1522, 1628]


igammas512_1024 = [1701, 1807, 1460, 2371, 2338, 2333, 308, 108, 2851, 870, 854, 1510, 2535, 1278, 1530, 1185, 1659, 1187, 3109, 874, 1335, 2111, 136, 1215, 2945, 1465, 1285, 2007, 2719, 2726, 2232, 2512, 75, 156, 3000, 2911, 2980, 872, 2685, 1590, 2210, 602, 1846, 777, 147, 2170, 2551, 246, 1676, 1755, 460, 291, 235, 3152, 2742, 2907, 3224, 1779, 2458, 1251, 2486, 2774, 2899, 1103, 1275, 2652, 1065, 2881, 725, 1508, 2368, 398, 951, 247, 1421, 3222, 2499, 271, 90, 853, 1860, 3203, 1162, 1618, 666, 320, 8, 2813, 1544, 282, 1838, 1293, 2314, 552, 2677, 2106, 1571, 205, 2918, 1542, 2721, 2597, 2312, 681, 130, 1602, 1871, 829, 2946, 3065, 1325, 2756, 1861, 1474, 1202, 2367, 3147, 1752, 2707, 171, 3127, 3042, 1907, 1836, 1517, 359, 758, 1441]

gammas768 = [2286, 2424, 1886, 1937, 1715, 2644, 2833, 2753, 16, 2500, 200, 137, 2946, 2260, 2255, 594,  1024, 978, 2429, 1854, 3166, 2065, 1548, 3342, 729, 2418, 470, 2569, 3395, 2412, 2682, 2494,  1278, 910, 2147, 1004, 1129, 2692, 2013, 2537, 3349, 410, 2107, 1668, 2826, 795, 755, 1295,  2, 2041, 25, 3042, 1100, 2482, 3379, 3369, 3116, 2895, 923, 3346, 2585, 2030, 2928, 1176,  2286, 2845, 919, 2721, 2409, 2186, 728, 3126, 878, 636, 604, 1036, 2377, 643, 328, 2852,  126, 674, 1575, 1511, 160, 801, 2000, 1370, 2716, 2621, 2837, 3378, 376, 3438, 1243, 1491,  1008, 1935, 2229, 1717, 1280, 2951, 2172, 589, 986, 226, 1954, 2825, 3008, 3305, 3030, 1557,  110, 1631, 1375, 1374, 1731, 1687, 2624, 2074, 1987, 203, 2367, 809, 438, 1026, 2018, 2454]

igammas768 = [1003, 1439, 2431, 3019, 2648, 1090, 3254, 1470, 1383, 833, 1770, 1726, 2083, 2082, 1826, 3347, 1900, 427, 152, 449, 632, 1503, 3231, 2471, 2868, 1285, 506, 2177, 1740, 1228, 1522, 2449, 1966, 2214, 19, 3081, 79, 620, 836, 741, 2087, 1457, 2656, 3297, 1946, 1882, 2783, 3331,  605, 3129, 2814, 1080, 2421, 2853, 2821, 2579, 331, 2729, 1271, 1048, 736, 2538, 612, 1171,  2281, 529, 1427, 872, 111, 2534, 562, 341, 88, 78, 975, 2357, 415, 3432, 1416, 3455,  2162, 2702, 2662, 631, 1789, 1350, 3047, 108, 920, 1444, 765, 2328, 2453, 1310, 2547, 2179,  963, 775, 1045, 62, 888, 2987, 1039, 2728, 115, 1909, 1392, 291, 1603, 1028, 2479, 2433,  2863, 1202, 1197, 511, 3320, 3257, 957, 3441, 704, 624, 813, 1742, 1520, 1571, 1792, 790, 1580]

def pline(a, f, l, s, x):
    for i in range(f, f+(l*s), s):
        for j in range(int(16/l)):
            print("{}, ".format((x*a[i])%65536), end='')
    print("")


def ireorder(a,qinv):
    print("const uint16_t zetas_inv_exp[400] = {")
    pline(a,0,16,2,qinv)
    pline(a,0,16,2,1)
    pline(a,32,16,2,qinv)
    pline(a,32,16,2,1)
    pline(a,1,16,2,qinv)
    pline(a,1,16,2,1)
    pline(a,33,16,2,qinv)
    pline(a,33,16,2,1)
    pline(a,64,16,1,qinv)
    pline(a,64,16,1,1)
    pline(a,80,16,1,qinv)
    pline(a,80,16,1,1)
    pline(a,96,8,1,qinv)
    pline(a,96,8,1,1)
    pline(a,104,8,1,qinv)
    pline(a,104,8,1,1)
    pline(a,112,4,1,qinv)
    pline(a,112,4,1,1)
    pline(a,116,4,1,qinv)
    pline(a,116,4,1,1)
    pline(a,120,2,1,qinv)
    pline(a,120,2,1,1)
    pline(a,122,2,1,qinv)
    pline(a,122,2,1,1)
    print("{}, {}, {}, {}, ".format((qinv*a[124])%65536, (qinv*a[124])%65536, a[124], a[124]))
    print("{}, {}, {}, {}, ".format((qinv*a[125])%65536, (qinv*a[125])%65536, a[125], a[125]))
    print("{}, {}, {}, {}, ".format((qinv*a[126])%65536, (qinv*a[126])%65536, a[126], a[126]))
    print("{}, {}, {}, {}, ".format((qinv*a[127])%65536, (qinv*a[127])%65536, a[127], a[127]))
    print("};")

def reorder(a,qinv):
    print("const uint16_t zetas_exp[396] = {")
    print("{}, {}, {}, {}, ".format((qinv*a[1])%65536, (qinv*a[1])%65536, a[1], a[1]))
    print("{}, {}, {}, {}, ".format((qinv*a[2])%65536, (qinv*a[2])%65536, a[2], a[2]))
    pline(a,4,2,1,qinv)
    pline(a,4,2,1,1)
    pline(a,8,4,1,qinv)
    pline(a,8,4,1,1)
    pline(a,16,8,1,qinv)
    pline(a,16,8,1,1)
    pline(a,32,16,1,qinv)
    pline(a,32,16,1,1)
    pline(a,64,16,2,qinv)
    pline(a,64,16,2,1)
    pline(a,65,16,2,qinv)
    pline(a,65,16,2,1)
    print("{}, {}, {}, {}, ".format((qinv*a[3])%65536, (qinv*a[3])%65536, a[3], a[3]))
    pline(a,6,2,1,qinv)
    pline(a,6,2,1,1)
    pline(a,12,4,1,qinv)
    pline(a,12,4,1,1)
    pline(a,24,8,1,qinv)
    pline(a,24,8,1,1)
    pline(a,48,16,1,qinv)
    pline(a,48,16,1,1)
    pline(a,96,16,2,qinv)
    pline(a,96,16,2,1)
    pline(a,97,16,2,qinv)
    pline(a,97,16,2,1)
    print("};")



q=3329
qinv=(q**65535)%65536
print("#if (NEWHOPE_N == 512 || NEWHOPE_N == 1024)")
reorder(gammas512_1024,qinv)
print(" ")
ireorder(igammas512_1024,qinv)
print("const uint16_t zetas[{}]=".format(2*128),end='')
print("{")
for i in range(64,128,8):
    print(i)
    for j in range(8):
        print("{}, {}, ".format((qinv*gammas512_1024[i+j])%65536,(qinv*(q-gammas512_1024[i+j]))%65536),end='')
    print("")
    for j in range(8):
        print("{}, {}, ".format((gammas512_1024[i+j])%65536,(q-gammas512_1024[i+j])%65536),end='')
    print("")
print("};")
print("#elif (NEWHOPE_N == 768)")
q1=3457
qinv1=(q1**65535)%65536
reorder(gammas768,qinv1)
print(" ")
ireorder(igammas768,qinv1)
print("const uint16_t zetas[{}]= ".format(2*128),end='')
print("{")
for i in range(64,128,8):
    for j in range(8):
        print("{}, {}, ".format((qinv1*gammas768[i+j])%65536,(qinv1*(q1-gammas768[i+j]))%65536),end='')
    print("")
    for j in range(8):
        print("{}, {}, ".format((gammas768[i+j])%65536,(q1-gammas768[i+j])%65536),end='')
    print("")
print("};")
print("#endif")

