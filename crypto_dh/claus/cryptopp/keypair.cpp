#include <cryptopp/dh.h>
#include "crypto_dh.h"
#include "randombytes.h"

#define PUBLICKEY_BYTES crypto_dh_PUBLICKEYBYTES
#define SECRETKEY_BYTES crypto_dh_SECRETKEYBYTES

using namespace CryptoPP;

int crypto_dh_keypair(
  unsigned char *pk,
  unsigned char *sk
)
{
  randombytes(sk+PUBLICKEY_BYTES, SECRETKEY_BYTES-PUBLICKEY_BYTES);
  static Integer p("106711310550942323238863446954494903303206603796265590798875260590060843568007841918927773348877395895791048832517368787533445258799160241834659776192282820736018472427221910874308833884006430888272214561307777629540843737689598751552666502301405808925850579645658786877473119117134988654123934303586903124139");
  static Integer base = 2;
  Integer a(sk+PUBLICKEY_BYTES, SECRETKEY_BYTES-PUBLICKEY_BYTES);
  Integer result = a_exp_b_mod_c(base, a, p);
  result.Encode(pk, PUBLICKEY_BYTES);
  result.Encode(sk, PUBLICKEY_BYTES);
  return 0;
}

