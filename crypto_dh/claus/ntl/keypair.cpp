#include <NTL/ZZ.h>
using namespace NTL;
#include "crypto_dh.h"
#include "randombytes.h"

#define PUBLICKEY_BYTES crypto_dh_PUBLICKEYBYTES
#define SECRETKEY_BYTES crypto_dh_SECRETKEYBYTES

int crypto_dh_keypair(
  unsigned char *pk,
  unsigned char *sk
)
{
  long long i;
  for (i = 0;i < SECRETKEY_BYTES;++i) sk[i] = 0;
  for (i = 0;i < PUBLICKEY_BYTES;++i) pk[i] = 0;
  randombytes(sk + PUBLICKEY_BYTES,SECRETKEY_BYTES - PUBLICKEY_BYTES);
  ZZ a;
  ZZ p;
  ZZ base;
  ZZ result;
  base = 2;
  a = ZZFromBytes(sk + PUBLICKEY_BYTES,SECRETKEY_BYTES - PUBLICKEY_BYTES);
  conv(p,"106711310550942323238863446954494903303206603796265590798875260590060843568007841918927773348877395895791048832517368787533445258799160241834659776192282820736018472427221910874308833884006430888272214561307777629540843737689598751552666502301405808925850579645658786877473119117134988654123934303586903124139");
  result = PowerMod(base,a,p);
  BytesFromZZ(pk,result,PUBLICKEY_BYTES);
  BytesFromZZ(sk,result,PUBLICKEY_BYTES);
  return 0;
}
